<Directory "/var/www/header">

  # Instructs browser to not cache this response
  Header add Cache-Control "no-cache, no-store, must-revalidate"
  Header add Pragma "no-cache"
  Header add Pragma "cache"
  Header add Expires "0"

  # Sets a header "AppNetwork" which is "public" or "private" depending on IP address
  SetEnv NETWORK "public"
  SetEnvIfExpr "-R '10.0.0.0/8' || -R '172.16.0.0/12' || -R '192.168.0.0/16'" NETWORK="private"
  Header set AppNetwork "Network is: %{NETWORK}e"

  # Adds response header with timing info
  Header set AppTiming "Time to serve request: %D microseconds"

  # Sets Content-Type to application/json if there is a request header AppJsonHeader == json_only
  SetEnvIf AppJsonHeader "json_only" HAVE_JSON_ONLY=1
  Header set Content-Type "application/json" env=HAVE_JSON_ONLY

  # Sets AppLangus == en-GB,fr=FR
  Header add AppLanguage "en-GB"
  Header add AppLanguage "fr-FR"

  # Sets 2 cookies apptest1 and apptest2
  Header set Set-Cookie "apptest1=YYY"
  Header add Set-Cookie "apptest2=ZZZ"

  # Sets a header AppSSLInfo with SSL protocol and cipher
  Header set AppSSLInfo "expr=%{SSL_PROTOCOL}"
  Header merge AppSSLInfo "expr=%{SSL:SSL_CIPHER}"

  # Sets a cookie "ssl_info" with SSL protocol
  Header add Set-Cookie "ssl_info=%{SSL_PROTOCOL}s"

  # Sets an incoming header with HTTP method lowercase
  RequestHeader set AppMethod "expr=%{tolower:%{REQUEST_METHOD}}" 

  # Echos back all incoming headers starting with App
  Header echo ^App

</Directory>

<Directory "/var/www/json">

  # Do not cache this response
  Header add Cache-Control "no-cache, no-store, must-revalidate"
  Header add Pragma "no-cache"
  Header add Expires "0"

  # Set a header AppCallback with "application/json" and also "application/hal+json"
  Header set AppCallback "application/json"
  Header merge AppCallback "application/hal+json"

  # Set content type to application/json
  Header set Content-Type "application/json"

  # If there is an incoming header "AppHtml" == "html_only" set env variable HAVE_HTML_ONLY = 1
  SetEnvIf Request_URI "\.html$" IS_HTML=1
  SetEnvIf Request_URI "^/$" IS_HTML=1

  # Reset content type to html if env variable HAVE_HTML_ONLY is set
  Header set Content-Type "text/html" env=IS_HTML

  # Adds response header with timing info
  Header set AppTiming "Time to serve request: %D microseconds"

</Directory>
