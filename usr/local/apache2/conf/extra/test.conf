Header add Cache-Control "no-cache, no-store, must-revalidate"
Header add Pragma "no-cache"
Header add Expires "0"

Header echo ^User-Agent
Alias "^/alias-test" "/home/vagrant/alias_test"
<Directory "/home/vagrant/alias_test">
    DirectoryIndex index.html
    Require all granted
</Directory>
<LocationMatch "/app/error/(?<LEVEL>[0-7]+)">
  Header set AppError "Reported level is %{LEVEL}e"
  Alias "/home/vagrant/errors/%{env:MATCH_LEVEL}.html"
</LocationMatch>
<Directory "/home/vagrant/errors">
  # DirectoryIndex index.html
  Require all granted
</Directory>
AliasMatch "^/app/image/(.*)/(.*)" "/home/vagrant/images/$1/$2.png"
<Directory "/home/vagrant/images">
  Require all granted
</Directory>

Redirect "/forums/server/" "http://forums.zend.com/viewforum.php?f=8"

Redirect permanent "/old_stuff" "/new_stuff"

Redirect 451 "/illegal"

# Matches requests for ebooks + sets content type header
RedirectMatch "/ebooks/(.*)\.(pdf|epub)$" "http://test.local/contents/$1.$2"
# Set env variable EBOOK_PDF if URI ends with .pdf
SetEnvIf Request_URI "\.pdf$" EBOOK_PDF=1
# Set Content-Type header to "application/pdf" if env variable EBOOK_PDF is set
Header set Content-Type "application/pdf" env=EBOOK_PDF

